{"version":3,"file":"main.js","mappings":"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","sources":["webpack://virtual-keyboard/./src/keyboard/row/row.js","webpack://virtual-keyboard/./src/keyboard/keyboard.js","webpack://virtual-keyboard/./src/index.js","webpack://virtual-keyboard/./src/title/title.js","webpack://virtual-keyboard/./src/textarea/textarea.js"],"sourcesContent":["import { getData } from \"../keyboard\";\r\n\r\nexport const updateKeyboard = (isCapsLock) => {\r\n    let btns = Array.from(document.querySelectorAll(\".btn\"));\r\n    btns.map((btn) => {\r\n        if (isCapsLock && btn.id[0] === \"K\" && btn.id[1] === \"e\") {\r\n            btn.textContent = btn.innerHTML.toUpperCase();\r\n        } else if (!isCapsLock && btn.id[0] === \"K\" && btn.id[1] === \"e\") {\r\n            btn.textContent = btn.innerHTML.toLowerCase();\r\n        }\r\n    });\r\n};\r\n\r\n\r\nexport const shiftPush = async (isPush, lang) => {\r\n    let keyboard = await getData();\r\n    let data = isPush\r\n        ? lang === \"EN\"\r\n            ? keyboard.keyboardUpper\r\n            : keyboard.keyboardRuUpper\r\n        : lang === \"RU\"\r\n            ? keyboard.keyboardRu\r\n            : keyboard.keyboard;\r\n    data.map((row) => {\r\n        row.keys.map((item) => {\r\n            let btn = document.getElementById(item.id);\r\n            btn.textContent = item.key;\r\n        });\r\n    });\r\n};\r\n\r\nconst Row = (keys) => {\r\n    let row = document.createElement(\"div\");\r\n    row.className = \"row\";\r\n    keys.map((btn) => {\r\n        let button = document.createElement(\"span\");\r\n        button.className = \"btn\";\r\n        button.id = btn.id;\r\n        let btnClass = btn.id;\r\n        button.classList.add(btnClass);\r\n        button.textContent = btn.key;\r\n        row.append(button);\r\n    });\r\n    return row;\r\n};\r\n\r\nexport default Row;","import Row from \"./row/row\";\r\n\r\nexport const getData = async () => {\r\n    let response = await fetch(\"./keyboard.json\");\r\n    let payload = await response.json();\r\n    return payload;\r\n};\r\n\r\n\r\nconst Keyboard = async (lang) => {\r\n    let keyboard = document.createElement(\"div\");\r\n    keyboard.className = \"keyboard\";\r\n    let rows = await getData();\r\n    let layout = lang === \"EN\" ? rows.keyboard : rows.keyboardRu;\r\n    layout.map((row) => {\r\n        keyboard.append(Row(row.keys));\r\n    });\r\n    return keyboard;\r\n};\r\n\r\nexport default Keyboard;","import Keyboard from \"./keyboard/keyboard\";\r\nimport { shiftPush, updateKeyboard } from \"./keyboard/row/row\";\r\nimport \"./styles/index.scss\";\r\nimport Textarea from \"./textarea/textarea\";\r\nimport Title from \"./title/title\";\r\n//import svg from \"../src/img/keyb.svg\";\r\n\r\nlet isCapsLock = false;\r\nlet lang = \"EN\";\r\nlet isShift = false;\r\nlet btnsArr = [];\r\n\r\nwindow.onload = function () {\r\n    let localStLang = localStorage.getItem(\"lang\");\r\n\r\n    if (localStLang) {\r\n        lang = localStLang;\r\n    }\r\n};\r\n\r\nwindow.onload();\r\n\r\nconst createHTMLTree = () => {\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"lang\", \"en\");\r\n};\r\n\r\ncreateHTMLTree();\r\n\r\n\r\n\r\n\r\nasync function createContainer() {\r\n    let div = document.createElement(\"div\");\r\n    // let link = document.createElement(\"link\");\r\n    // let head = document.querySelector(\"head\");\r\n    // link.setAttribute(\"rel\", \"icon\");\r\n    // link.setAttribute(\"type\", \"image/x-icon\");\r\n    // link.setAttribute(\"href\", svg);\r\n    // head.append(link); // add favicon\r\n    div.className = \"container\";\r\n    div.append(Title()); // add title\r\n    div.append(Textarea()); // add textarea\r\n    let keyboard = await Keyboard(lang);\r\n    div.append(keyboard);\r\n    let par1 = document.createElement(\"p\");\r\n    let par2 = document.createElement(\"p\");\r\n    par1.className = \"discription\";\r\n    par2.className = \"language\";\r\n    par1.textContent = \"Клавиатура создана в операционной системе Windows\";\r\n    par2.textContent = \"Для переключения языка комбинация: левыe Shift + Alt\";\r\n    div.append(par1);\r\n    div.append(par2);\r\n    document.body.append(div); // add keyboard\r\n    btnsArr = Array.from(document.querySelectorAll(\".btn\"));\r\n    return;\r\n}\r\n\r\ncreateContainer();\r\n\r\ndocument.addEventListener(\"keydown\", function (event) {\r\n    if (event.detail.code) {\r\n        event.code = event.detail.code;\r\n    }\r\n\r\n    if (event.detail.key) {\r\n        event.key = event.detail.key;\r\n    }\r\n\r\n\r\n    const textarea = document.querySelector(\".textarea\");\r\n    const btn = Array.from(document.querySelectorAll(\".btn\"));\r\n    let curBtn = btn.find((item) => item.id === event.code);\r\n    if (curBtn && curBtn.id[0] === \"K\" && curBtn.id[1] === \"e\"\r\n        || curBtn.id[0] === \"D\" && curBtn.id[1] === \"i\"\r\n        || curBtn.id === \"Backquote\" || curBtn.id === \"Minus\" || curBtn.id === \"Equal\"\r\n        || curBtn.id === \"BracketLeft\" || curBtn.id === \"BracketRight\"\r\n        || curBtn.id === \"Backslash\" || curBtn.id === \"Semicolon\" || curBtn.id === \"Quote\"\r\n        || curBtn.id === \"Comma\" || curBtn.id === \"Period\" || curBtn.id === \"Slash\") {\r\n        event.preventDefault();\r\n        let curPosition = textarea.selectionStart;\r\n\r\n        if (curPosition === textarea.value.length) {\r\n            textarea.value += curBtn.textContent;\r\n        } else if (curPosition === 0) {\r\n            textarea.value = curBtn.textContent + textarea.value;\r\n            textarea.setSelectionRange(curPosition + 1, curPosition + 1);\r\n        } else if (curPosition > 0 && curPosition < textarea.value.length) {\r\n            textarea.value = textarea.value.slice(0, curPosition) + curBtn.textContent + textarea.value.slice(curPosition, textarea.length);\r\n            textarea.setSelectionRange(curPosition + 1, curPosition + 1);\r\n        }\r\n    }\r\n\r\n    if (curBtn.id === \"CapsLock\") {\r\n        if (!isCapsLock) {\r\n            isCapsLock = true;\r\n            curBtn.classList.add(\"active\");\r\n            updateKeyboard(isCapsLock);\r\n        } else {\r\n            isCapsLock = false;\r\n            curBtn.classList.remove(\"active\");\r\n            updateKeyboard(isCapsLock);\r\n        }\r\n    } else {\r\n        curBtn.classList.add(\"active\");\r\n    }\r\n\r\n    if (curBtn.id === \"ShiftLeft\" || curBtn.id === \"ShiftRight\") {\r\n        curBtn.classList.add(\"active\");\r\n        isCapsLock ? shiftPush(false, lang) : shiftPush(true, lang);\r\n\r\n        isShift = true;\r\n    }\r\n\r\n    if (isShift && curBtn.id === \"AltLeft\") {\r\n        if (lang === \"EN\") {\r\n            lang = \"RU\";\r\n        } else {\r\n            lang = \"EN\";\r\n        }\r\n    }\r\n});\r\n\r\ndocument.addEventListener(\"keyup\", (event) => {\r\n    const btn = Array.from(document.querySelectorAll(\".btn\"));\r\n    let curBtn = btn.find((item) => item.id === event.code);\r\n    if (curBtn.id === \"ShiftLeft\" || curBtn.id === \"ShiftRight\") {\r\n        curBtn.classList.remove(\"active\");\r\n        isCapsLock ? shiftPush(true, lang) : shiftPush(false, lang);\r\n        isShift = false;\r\n    }\r\n    if (curBtn.id !== \"CapsLock\") {\r\n        curBtn.classList.remove(\"active\");\r\n    }\r\n});\r\n\r\n\r\n\r\nsetTimeout(() => {\r\n    let textarea = document.querySelector(\".textarea\");\r\n    textarea.addEventListener(\"click\", () => {\r\n    });\r\n    btnsArr.map((btn) => {\r\n        btn.addEventListener(\"click\", () => {\r\n            let textarea = document.querySelector(\".textarea\");\r\n            console.log(textarea);\r\n            textarea.focus();\r\n            let curPosition = textarea.selectionStart;\r\n            if (btn && btn.id[0] === \"K\" && btn.id[1] === \"e\"\r\n                || btn.id[0] === \"D\" && btn.id[1] === \"i\"\r\n                || btn.id === \"Backquote\" || btn.id === \"Minus\" || btn.id === \"Equal\"\r\n                || btn.id === \"BracketLeft\" || btn.id === \"BracketRight\"\r\n                || btn.id === \"Backslash\" || btn.id === \"Semicolon\" || btn.id === \"Quote\"\r\n                || btn.id === \"Comma\" || btn.id === \"Period\" || btn.id === \"Slash\" || btn.id === \"ArrowLeft\"\r\n                || btn.id === \"ArrowRight\" || btn.id === \"ArrowUp\" || btn.id === \"ArrowDown\") {\r\n\r\n                if (curPosition === textarea.value.length) {\r\n                    textarea.value += btn.textContent;\r\n                } else if (curPosition === 0) {\r\n                    textarea.value = btn.textContent + textarea.value;\r\n                    textarea.setSelectionRange(curPosition + 1, curPosition + 1);\r\n                } else if (curPosition > 0 && curPosition < textarea.value.length) {\r\n                    textarea.value = textarea.value.slice(0, curPosition) + btn.textContent + textarea.value.slice(curPosition, textarea.length);\r\n                    textarea.setSelectionRange(curPosition + 1, curPosition + 1);\r\n                }\r\n\r\n\r\n            } else if (btn.id === \"Backspace\") {\r\n                if (curPosition > 0) {\r\n                    textarea.value = textarea.value.slice(0, curPosition - 1) + textarea.value.slice(curPosition, textarea.length);\r\n                    textarea.setSelectionRange(curPosition - 1, curPosition - 1);\r\n                }\r\n\r\n            } else if (btn.id === \"Delete\") {\r\n\r\n                textarea.value = textarea.value.slice(0, curPosition) + textarea.value.slice(curPosition + 1, textarea.length);\r\n                textarea.setSelectionRange(curPosition, curPosition);\r\n            } else if (btn.id === \"Enter\") {\r\n                textarea.value += \"\\n\";\r\n            } else if (btn.id === \"CapsLock\") {\r\n                if (!isCapsLock) {\r\n                    isCapsLock = true;\r\n                    btn.classList.add(\"active\");\r\n                    updateKeyboard(isCapsLock);\r\n                } else {\r\n                    isCapsLock = false;\r\n                    btn.classList.remove(\"active\");\r\n                    updateKeyboard(isCapsLock);\r\n                }\r\n            } else if (btn.id === \"Space\") {\r\n                if (curPosition > 0 && curPosition < textarea.value.length) {\r\n                    textarea.value = textarea.value.slice(0, curPosition) + \" \" + textarea.value.slice(curPosition, textarea.length);\r\n                    textarea.setSelectionRange(curPosition + 1, curPosition + 1);\r\n                }\r\n            }\r\n            //else if (btn.id === \"ArrowRight\") {\r\n            //     textarea.setSelectionRange(curPosition + 1, curPosition + 1);\r\n            // } else if (btn.id === \"ArrowLeft\") {\r\n            //     if (curPosition > 0) {\r\n            //         textarea.setSelectionRange(curPosition - 1, curPosition - 1);\r\n            //     }\r\n            // } else if (btn.id === \"ArrowUp\") {\r\n            //     let rowsQuantity = textarea.value.split(\"\\n\");\r\n            //     if (curPosition > 0 && rowsQuantity.length === 1) {\r\n            //         textarea.setSelectionRange(0, 0);\r\n            //     }\r\n\r\n            //     if (curPosition > rowsQuantity[0].length && rowsQuantity.length > 1) {\r\n            //         textarea.setSelectionRange(5, 5);\r\n            //     }\r\n            // }\r\n\r\n        });\r\n    });\r\n}, 1000);\r\n\r\n\r\nwindow.onbeforeunload = function () {\r\n    localStorage.setItem(\"lang\", lang);\r\n};\r\n\r\n\r\n\r\nwindow.onbeforeunload();\r\n\r\n","function Title() {\r\n    let title = document.createElement(\"h1\");\r\n    title.className = \"title\";\r\n    title.textContent = \"Виртуальная клавиатура\";\r\n    return title;\r\n}\r\n\r\nexport default Title;","const Textarea = () => {\r\n    let textarea = document.createElement(\"textarea\");\r\n    textarea.className = \"textarea\";\r\n    textarea.setAttribute(\"rows\", \"50\");\r\n    textarea.setAttribute(\"cols\", \"50\");\r\n   // textarea.setAttribute(\"readonly\", \"true\");\r\n    return textarea;\r\n};\r\n\r\nexport default Textarea;"],"names":["updateKeyboard","isCapsLock","Array","from","document","querySelectorAll","map","btn","id","textContent","innerHTML","toUpperCase","toLowerCase","shiftPush","async","isPush","lang","keyboard","getData","keyboardUpper","keyboardRuUpper","keyboardRu","row","keys","item","getElementById","key","response","fetch","json","createElement","className","rows","append","button","btnClass","classList","add","isShift","btnsArr","window","onload","localStLang","localStorage","getItem","querySelector","setAttribute","div","title","textarea","par1","par2","body","createContainer","addEventListener","event","detail","code","curBtn","find","preventDefault","curPosition","selectionStart","value","length","setSelectionRange","slice","remove","setTimeout","console","log","focus","onbeforeunload","setItem"],"sourceRoot":""}